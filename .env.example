# cp .env.example .env
# Edit your .env file with your own values
# Don't commit your .env file to git/push to GitHub!
# Don't modify/delete .env.example unless adding extensions to the project
# which require new variable to be added to the .env file

# OPENAI API CONFIG
OPENAI_API_KEY=
OPENAI_API_MODEL=gpt-3.5-turbo # alternatively, gpt-4, text-davinci-003, etc
OPENAI_TEMPERATURE=0.5
PINECONE_API_KEY=
PINECONE_ENVIRONMENT=us-east1-gcp

# GOOGLE CUSTOM SEARCH API CONFIG
GOOGLE_API_KEY=
SEARCH_ENGINE_ID=

# TABLE CONFIG
TABLE_NAME=test-table

# INSTANCE CONFIG
BABY_NAME=BabyAGI

# RUN CONFIG
OBJECTIVE=Solve world hunger

# With STOP_CRITERIA it is possible to reach a final response at some point. The wording is the key, the condition(s) have to be clear and must be achievable.
STOP_CRITERIA=When a few credible sources have been found that confirm the objective, or further evaluation will most probably not improve the result.

# This prompt will be issued when the STOP_CRITERIA is met, for one (or more) final response(s)
FINAL_PROMPT=Compile a detailed report including all relevant information and considering the context available. Make a conclusion.

# The contribution, plausibility and probability of last completed task's result regarding the OBJECTIVE is determined, added up each cycle. (default: 0.0)
SAFETY_THRESHOLD=20.0

# The probability threshold and number for completed tasks with high score
PROBABILITY_THRESHOLD=0.9
PROBABILITY_HIGHSCORE=10

# The threshold for last task result's contribution to objective, for changing the subject area for new tasks in case of low contribution (0: feature deactivated)
CONTRIBUTION_THRESHOLD=0.3

# Stored values for multiple runs with same OBJECTIVE (automatic read/write for each run)
STORED_CONTRIBUTION='0.0'
STORED_PLAUSIBILITY='0.0'
STORED_PROBABILITY='0.0'
STORED_HIGHSCORE='0'
STORED_RUNTIME='00:00:00'

# For backwards compatibility
# FIRST_TASK can be used instead of INITIAL_TASK
INITIAL_TASK=Develop a task list

# Extensions
# List additional extensions to load (except .env.example!)
DOTENV_EXTENSIONS=
# Set to true to enable command line args support
ENABLE_COMMAND_LINE_ARGS=false

